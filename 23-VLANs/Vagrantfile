# -*- mode: ruby -*-
# vim: set ft=ruby :
# -*- mode: ruby -*-
# vim: set ft=ruby :

MACHINES = {
:inetRouter => {
        :box_name => "centos/7",
        :net => [
                   {adapter: 2, auto_config: false, virtualbox__intnet: "bond"},
                   {adapter: 3, auto_config: false, virtualbox__intnet: "bond"}
                ]
  },

  :centralRouter => {
        :box_name => "centos/7",
        :net => [
                   {adapter: 2, auto_config: false, virtualbox__intnet: "bond"},
                   {adapter: 3, auto_config: false, virtualbox__intnet: "bond"}
                ]
  },

  :testServer1 => {
        :box_name => "centos/7",
        :net => [
                   {ip: '192.168.254.2', adapter: 2, netmask: "255.255.255.252", virtualbox__intnet: "central-net"},
                   {adapter: 3, auto_config: false, virtualbox__intnet: "testlan"}
                ]
  }, 
  
  :testClient1 => {
        :box_name => "centos/7",
        :net => [
                   {ip: '192.168.254.3', adapter: 2, netmask: "255.255.255.252", virtualbox__intnet: "central-net"},
                   {adapter: 3, auto_config: false, virtualbox__intnet: "testlan"}
                ]
  },
  
  :testServer2 => {
        :box_name => "centos/7",
        :net => [
                   {ip: '192.168.254.4', adapter: 2, netmask: "255.255.255.240", virtualbox__intnet: "central-net"},
                   {adapter: 3, auto_config: false, virtualbox__intnet: "testlan"}
                ]
  }, 
  
  :testClient2 => {
        :box_name => "centos/7",
        :net => [
                   {ip: '192.168.254.5', adapter: 2, netmask: "255.255.255.192", virtualbox__intnet: "central-net"},
                   {adapter: 3, auto_config: false, virtualbox__intnet: "testlan"}
                ]
  },
}

Vagrant.configure("2") do |config|

  MACHINES.each do |boxname, boxconfig|

    config.vm.define boxname do |box|

        box.vm.box = boxconfig[:box_name]
        box.vm.host_name = boxname.to_s

        boxconfig[:net].each do |ipconf|
          box.vm.network "private_network", ipconf
        end
        
        if boxconfig.key?(:public)
          box.vm.network "public_network", boxconfig[:public]
        end

        box.vm.provision "shell", inline: <<-SHELL
          mkdir -p ~root/.ssh
                cp ~vagrant/.ssh/auth* ~root/.ssh
        SHELL
        
        case boxname.to_s
        when "inetRouter"

        when "centralRouter"

        when "testServer1"

        when "testClient1"

        when "testServer2"

        when "testClient2"

        end

      end

  end
          config.vm.provision "ansible_local" do |ansible|
        ansible.playbook = "playbook.yml"
        ansible.become = "true"
        end
end