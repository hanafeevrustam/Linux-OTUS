# -*- mode: ruby -*-
# vim: set ft=ruby :
# -*- mode: ruby -*-
# vim: set ft=ruby :

MACHINES = {
:inetRouter => {
        :box_name => "centos/6",
        #:public => {:ip => '10.10.10.1', :adapter => 1},
        :net => [
                   {ip: '192.168.255.1', adapter: 2, netmask: "255.255.255.252", virtualbox__intnet: "router-net"},
                ]
  },
  :inetRouter2 => {
    :box_name => "centos/7",
    :net => [
               {ip: '192.168.254.1', adapter: 2, netmask: "255.255.255.252", virtualbox__intnet: "router-net2"},
            ],
    
    :public => {use_dhcp_assigned_default_route: true, :adapter => 3}
},
 :centralRouter => {
       :box_name => "centos/7",
        :net => [
                   {ip: '192.168.255.2', adapter: 2, netmask: "255.255.255.252", virtualbox__intnet: "router-net"},
                   {ip: '192.168.0.1', adapter: 3, netmask: "255.255.255.240", virtualbox__intnet: "dir-net"},
                   {ip: '192.168.0.33', adapter: 4, netmask: "255.255.255.240", virtualbox__intnet: "hw-net"},
                   {ip: '192.168.0.65', adapter: 5, netmask: "255.255.255.192", virtualbox__intnet: "mgt-net"},
                   {ip: '192.168.0.17', adapter: 6, netmask: "255.255.255.252", virtualbox__intnet: "office1Router"},
                   {ip: '192.168.0.21', adapter: 7, netmask: "255.255.255.252", virtualbox__intnet: "office2Router"},
                   {ip: '192.168.254.2', adapter: 8, netmask: "255.255.255.252", virtualbox__intnet: "router-net2"},
                ]
  },

  :office1Router => {
       :box_name => "centos/7",
        :net => [
                   {ip: '192.168.0.18', adapter: 2, netmask: "255.255.255.252", virtualbox__intnet: "office1Router"},
                   {ip: '192.168.2.193', adapter: 3, netmask: "255.255.255.192", virtualbox__intnet: "office1-net"},
                ]
  },
  
  :office2Router => {
       :box_name => "centos/7",
        :net => [
                   {ip: '192.168.0.22', adapter: 2, netmask: "255.255.255.252", virtualbox__intnet: "office2Router"},
                   {ip: '192.168.1.193', adapter: 3, netmask: "255.255.255.192", virtualbox__intnet: "office2-net"},
                ]
  },

  :centralServer => {
        :box_name => "centos/7",
        :net => [
                   {ip: '192.168.0.2', adapter: 2, netmask: "255.255.255.240", virtualbox__intnet: "dir-net"},
                   #{adapter: 3, auto_config: false, virtualbox__intnet: true},
                   #{adapter: 4, auto_config: false, virtualbox__intnet: true},
                ]
  },
  
  :office1Server => {
        :box_name => "centos/7",
        :net => [
                   {ip: '192.168.2.194', adapter: 2, netmask: "255.255.255.192", virtualbox__intnet: "office1-net"},
                   {adapter: 3, auto_config: false, virtualbox__intnet: true},
                   {adapter: 4, auto_config: false, virtualbox__intnet: true},
                ]
  },

  :office2Server => {
        :box_name => "centos/7",
        :net => [
                   {ip: '192.168.1.194', adapter: 2, netmask: "255.255.255.192", virtualbox__intnet: "office2-net"},
                   {adapter: 3, auto_config: false, virtualbox__intnet: true},
                   {adapter: 4, auto_config: false, virtualbox__intnet: true},
                ]
  },
}

Vagrant.configure("2") do |config|

  MACHINES.each do |boxname, boxconfig|

    config.vm.define boxname do |box|

        box.vm.box = boxconfig[:box_name]
        box.vm.host_name = boxname.to_s

        boxconfig[:net].each do |ipconf|
          box.vm.network "private_network", ipconf
        end
        
        if boxconfig.key?(:public)
          box.vm.network "public_network", boxconfig[:public]
        end

        box.vm.provision "shell", inline: <<-SHELL
          mkdir -p ~root/.ssh
                cp ~vagrant/.ssh/auth* ~root/.ssh
        SHELL
        
        case boxname.to_s
        when "inetRouter"
          box.vm.hostname = 'inetRouter'
          box.vm.provision "shell", run: "always", inline: <<-SHELL
            echo 1 > /proc/sys/net/ipv4/ip_forward
            sed -i "s%net.ipv4.ip_forward = 0%net.ipv4.ip_forward = 1%g"  /etc/sysctl.conf
            sysctl -p /etc/sysctl.conf
            #touch /etc/sysconfig/iptables
            iptables -t nat -A POSTROUTING ! -d 192.168.0.0/16 -o eth0 -j MASQUERADE
            #iptables -t nat -A POSTROUTING -s 192.168.255.0/22 -j MASQUERADE
            iptables -t nat -A POSTROUTING -s 192.168.0.0/24 -j MASQUERADE
            #/sbin/iptables-save > /etc/iptables.rules
            #service iptables restart
            
            touch /etc/sysconfig/network-scripts/route-eth1
            echo "192.168.0.0/28 via 192.168.255.2 dev eth1" >> /etc/sysconfig/network-scripts/route-eth1
            echo "192.168.0.32/28 via 192.168.255.2 dev eth1" >> /etc/sysconfig/network-scripts/route-eth1
            echo "192.168.0.64/26 via 192.168.255.2 dev eth1" >> /etc/sysconfig/network-scripts/route-eth1
            echo "192.168.0.16/30 via 192.168.255.2 dev eth1" >> /etc/sysconfig/network-scripts/route-eth1
            echo "192.168.0.20/30 via 192.168.255.2 dev eth1" >> /etc/sysconfig/network-scripts/route-eth1
            echo "192.168.2.192/26 via 192.168.255.2 dev eth1" >> /etc/sysconfig/network-scripts/route-eth1
            echo "192.168.1.192/26 via 192.168.255.2 dev eth1" >> /etc/sysconfig/network-scripts/route-eth1
            service network restart
            iptables-restore < /vagrant/inetrouter.rules
            sed -i "s/PasswordAuthentication no/PasswordAuthentication yes/g" /etc/ssh/sshd_config
            service sshd restart
            SHELL

          when "inetRouter2"
            box.vm.hostname = 'inetRouter2'
            box.vm.provision "shell", run: "always", inline: <<-SHELL
              # echo 1 > /proc/sys/net/ipv4/ip_forward
              # sed -i "s%net.ipv4.ip_forward = 0%net.ipv4.ip_forward = 1%g"  /etc/sysctl.conf
              # sysctl -p /etc/sysctl.conf
              echo "DEFROUTE=no" >> /etc/sysconfig/network-scripts/ifcfg-eth0 
              touch /etc/sysconfig/network-scripts/route-eth1
              
              echo "192.168.0.0/28 via 192.168.254.2 dev eth1" >> /etc/sysconfig/network-scripts/route-eth1
              echo "192.168.0.32/28 via 192.168.254.2 dev eth1" >> /etc/sysconfig/network-scripts/route-eth1
              echo "192.168.0.64/26 via 192.168.254.2 dev eth1" >> /etc/sysconfig/network-scripts/route-eth1
              echo "192.168.0.16/30 via 192.168.254.2 dev eth1" >> /etc/sysconfig/network-scripts/route-eth1
              echo "192.168.0.20/30 via 192.168.254.2 dev eth1" >> /etc/sysconfig/network-scripts/route-eth1
              echo "192.168.2.192/26 via 192.168.254.2 dev eth1" >> /etc/sysconfig/network-scripts/route-eth1
              echo "192.168.1.192/26 via 192.168.254.2 dev eth1" >> /etc/sysconfig/network-scripts/route-eth1
              
              #service network restart
              systemctl restart network
              systemctl stop NetworkManager
              systemctl start firewalld
                firewall-cmd --zone=internal --change-interface=eth1
                firewall-cmd --zone=public --change-interface=eth2
                firewall-cmd --zone=internal --add-masquerade --permanent
                firewall-cmd --zone=public --add-forward-port=port=8080:proto=tcp:toport=80:toaddr=192.168.0.2 --permanent
                
                firewall-cmd --reload
                systemctl enable firewalld
                systemctl restart network
                firewall-cmd --reload
              SHELL

           when "centralRouter"
             box.vm.hostname = 'centralRouter'
             box.vm.provision "shell", run: "always", inline: <<-SHELL
               yum install nmap -y
               cp /vagrant/knock.sh /home/vagrant/knock.sh && chmod +x /home/vagrant/knock.sh
               sysctl -w net.ipv4.ip_forward=1
               echo "net.ipv4.ip_forward = 1" >> /etc/sysctl.conf
               echo "DEFROUTE=no" >> /etc/sysconfig/network-scripts/ifcfg-eth0 
               echo "GATEWAY=192.168.255.1" >> /etc/sysconfig/network-scripts/ifcfg-eth1
               echo "192.168.2.192/26 via 192.168.0.18 dev eth5" >> /etc/sysconfig/network-scripts/route-eth5
               echo "192.168.1.192/26 via 192.168.0.22 dev eth6" >> /etc/sysconfig/network-scripts/route-eth6
                  echo "192.168.254.0/30 via 192.168.254.2 dev eth7" >> /etc/sysconfig/network-scripts/route-eth7
               systemctl restart network
               SHELL
          
            when "office1Router"
              box.vm.hostname = 'office1Router'
              box.vm.provision "shell", run: "always", inline: <<-SHELL
                sysctl -w net.ipv4.ip_forward=1
                echo "net.ipv4.ip_forward = 1" >> /etc/sysctl.conf
                echo "DEFROUTE=no" >> /etc/sysconfig/network-scripts/ifcfg-eth0 
                echo "GATEWAY=192.168.0.17" >> /etc/sysconfig/network-scripts/ifcfg-eth1
              
              
                systemctl restart network
                SHELL

            when "office2Router"
              box.vm.hostname = 'office2Router'
              box.vm.provision "shell", run: "always", inline: <<-SHELL
                sysctl -w net.ipv4.ip_forward=1
                echo "net.ipv4.ip_forward = 1" >> /etc/sysctl.conf
                echo "DEFROUTE=no" >> /etc/sysconfig/network-scripts/ifcfg-eth0 
                echo "GATEWAY=192.168.0.21" >> /etc/sysconfig/network-scripts/ifcfg-eth1
                echo "default via 192.168.0.21 dev eth1" >> /etc/sysconfig/network-scripts/route-eth1
                systemctl restart network
                SHELL
            when "centralServer"
              box.vm.hostname = 'centralServer'
              box.vm.provision "shell", run: "always", inline: <<-SHELL
                echo "DEFROUTE=no" >> /etc/sysconfig/network-scripts/ifcfg-eth0 
                echo "GATEWAY=192.168.0.1" >> /etc/sysconfig/network-scripts/ifcfg-eth1
                yum install nginx -y
                systemctl enable nginx
                systemctl start nginx
                systemctl restart network
                SHELL

            when "office1Server"
              box.vm.hostname = 'office1Server'
              box.vm.provision "shell", run: "always", inline: <<-SHELL
                echo "DEFROUTE=no" >> /etc/sysconfig/network-scripts/ifcfg-eth0 
                echo "GATEWAY=192.168.2.193" >> /etc/sysconfig/network-scripts/ifcfg-eth1
                systemctl restart network
                SHELL
          
            when "office2Server"
              box.vm.hostname = 'office2Server'
              box.vm.provision "shell", run: "always", inline: <<-SHELL
                echo "DEFROUTE=no" >> /etc/sysconfig/network-scripts/ifcfg-eth0 
                echo "GATEWAY=192.168.1.193" >> /etc/sysconfig/network-scripts/ifcfg-eth1
                systemctl restart network
                SHELL
                
        end
          
      end

  end
  
  
end